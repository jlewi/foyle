// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: foyle/logs/logs.proto

package logspb

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	go_uber_org_zap_zapcore "go.uber.org/zap/zapcore"
	github_com_golang_protobuf_ptypes "github.com/golang/protobuf/ptypes"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (m *LogsWaterMark) MarshalLogObject(enc go_uber_org_zap_zapcore.ObjectEncoder) error {
	var keyName string
	_ = keyName

	if m == nil {
		return nil
	}

	keyName = "file" // field file = 1
	enc.AddString(keyName, m.File)

	keyName = "offset" // field offset = 2
	enc.AddInt64(keyName, m.Offset)

	keyName = "last_log_timestamp" // field last_log_timestamp = 4
	if t, err := github_com_golang_protobuf_ptypes.Timestamp(m.LastLogTimestamp); err == nil {
		enc.AddTime(keyName, t)
	}

	return nil
}

func (m *GetLogsStatusRequest) MarshalLogObject(enc go_uber_org_zap_zapcore.ObjectEncoder) error {
	var keyName string
	_ = keyName

	if m == nil {
		return nil
	}

	return nil
}

func (m *GetLogsStatusResponse) MarshalLogObject(enc go_uber_org_zap_zapcore.ObjectEncoder) error {
	var keyName string
	_ = keyName

	if m == nil {
		return nil
	}

	keyName = "watermark" // field watermark = 1
	if m.Watermark != nil {
		var vv interface{} = m.Watermark
		if marshaler, ok := vv.(go_uber_org_zap_zapcore.ObjectMarshaler); ok {
			enc.AddObject(keyName, marshaler)
		}
	}

	keyName = "last_log_timestamp_human" // field last_log_timestamp_human = 2
	enc.AddString(keyName, m.LastLogTimestampHuman)

	return nil
}
