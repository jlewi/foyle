// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: eval_query.sql

package fsql

import (
	"context"
	"time"
)

const getResult = `-- name: GetResult :one
SELECT id, time, proto_json FROM results
WHERE id = ?
`

func (q *Queries) GetResult(ctx context.Context, id string) (Result, error) {
	row := q.db.QueryRowContext(ctx, getResult, id)
	var i Result
	err := row.Scan(&i.ID, &i.Time, &i.ProtoJson)
	return i, err
}

const updateResult = `-- name: UpdateResult :exec
INSERT OR REPLACE INTO results
(id, time, proto_json)
VALUES
(?, ?, ?)
`

type UpdateResultParams struct {
	ID        string
	Time      time.Time
	ProtoJson string
}

func (q *Queries) UpdateResult(ctx context.Context, arg UpdateResultParams) error {
	_, err := q.db.ExecContext(ctx, updateResult, arg.ID, arg.Time, arg.ProtoJson)
	return err
}
