{
  "max_tokens": 2000,
  "messages": [
    {
      "content": [
        {
          "text": "Continue writing the markdown document by adding a code block with the commands a user should execute.\nFollow these rules\n\n* Set the language inside the code block to bash\n* Use the text at the end of the document to determine what commands to execute next\n* Use the existing text and code blocks in the document to learn phrases that are predictive of specific commands\n* Only respond with a single code block\n* You can put multiple commands into a code block\n* If the text at the end of the document doesn't clearly describe a command to execute simply respond with the </output> tag\n\n\nHere are a bunch of examples of input documents along with the expected output.\n\n<example>\n<input>\n# Troubleshoot Learning\n\nTroubleshoot Learning\n## Check Examples\n\nIf Foyle is learning there should be example files in ${HOME}/.foyle/training\n```bash\nls -la ~/.foyle/training\n```\n```output\n{\n\t\"type\": \"stateful.runme/terminal\",\n\t\"output\": {\n\t\t\"runme.dev/id\": \"01J6DFZ9V3R29TCDEY2AYA8XTV\",\n\t\t\"content\": \"\",\n\t\t\"initialRows\": 10,\n\t\t\"enableShareButton\": true,\n\t\t\"isAutoSaveEnabled\": false,\n\t\t\"isPlatformAuthEnabled\": false,\n\t\t\"isSessionOutputsEnabled\": true,\n\t\t\"backgroundTask\": true,\n\t\t\"nonInteractive\": false,\n\t\t\"interactive\": true,\n\t\t\"fontSize\": 16,\n\t\t\"fontFamily\": \"Menlo, Monaco, 'Courier New', monospace\",\n\t\t\"rows\": 10,\n\t\t\"cursorStyle\": \"bar\",\n\t\t\"cursorBlink\": true,\n\t\t\"cursorWidth\": 1,\n\t\t\"smoothScrollDuration\": 0,\n\t\t\"scrollback\": 1000,\n\t\t\"closeOnSuccess\": true\n\t}\n}\n```\n```output\n\n```\nThe output should include `example.binpb` files as illustrated below. \n\n```\n-rw-r--r--    1 jlewi  staff   9895 Aug 28 07:46 01J6CQ6N02T7J16RFEYCT8KYWP.example.binpb\n```\n\nIf there aren't any then no examples have been learned.\n## Did Block Logs Get Created \n\n* Get the block logs for the cell\n* Change the cell ID to the ULID of the cell (you can view this in the markdown)\n* The cell should be one that was generated by the AI and you think learning should have occurred on\n```bash\nCELLID=01J6DFZ9V3R29TCDEY2AYA8XTV\ncurl http://localhost:8080/api/blocklogs/${CELLID} | jq .\n```\n```output\n{\n\t\"type\": \"stateful.runme/terminal\",\n\t\"output\": {\n\t\t\"runme.dev/id\": \"01J6DG428ER427GJNTKC15G6JM\",\n\t\t\"content\": \"\",\n\t\t\"initialRows\": 10,\n\t\t\"enableShareButton\": true,\n\t\t\"isAutoSaveEnabled\": false,\n\t\t\"isPlatformAuthEnabled\": false,\n\t\t\"isSessionOutputsEnabled\": true,\n\t\t\"backgroundTask\": true,\n\t\t\"nonInteractive\": false,\n\t\t\"interactive\": true,\n\t\t\"fontSize\": 16,\n\t\t\"fontFamily\": \"Menlo, Monaco, 'Courier New', monospace\",\n\t\t\"rows\": 10,\n\t\t\"cursorStyle\": \"bar\",\n\t\t\"cursorBlink\": true,\n\t\t\"cursorWidth\": 1,\n\t\t\"smoothScrollDuration\": 0,\n\t\t\"scrollback\": 1000,\n\t\t\"closeOnSuccess\": true\n\t}\n}\n```\n```output\n\n```\n* If this returns not found then no log was created for this cell\n\n## Check the logs associated with that cell\n* We can search for all logs associated with that cell\n```bash\nexport LASTLOG=~/.foyle/logs/raw/$(ls -t ~/.foyle/logs/raw | head -n 1 )\necho \"Last log file: ${LASTLOG}\"\njq -c \"select(.blockId == \\\"${CELLID}\\\")\" ${LASTLOG}\n```\n```output\n{\n\t\"type\": \"stateful.runme/terminal\",\n\t\"output\": {\n\t\t\"runme.dev/id\": \"01J6DG8266XWR99MWK7WZHQAJM\",\n\t\t\"content\": \"\",\n\t\t\"initialRows\": 10,\n\t\t\"enableShareButton\": true,\n\t\t\"isAutoSaveEnabled\": false,\n\t\t\"isPlatformAuthEnabled\": false,\n\t\t\"isSessionOutputsEnabled\": true,\n\t\t\"backgroundTask\": true,\n\t\t\"nonInteractive\": false,\n\t\t\"interactive\": true,\n\t\t\"fontSize\": 16,\n\t\t\"fontFamily\": \"Menlo, Monaco, 'Courier New', monospace\",\n\t\t\"rows\": 10,\n\t\t\"cursorStyle\": \"bar\",\n\t\t\"cursorBlink\": true,\n\t\t\"cursorWidth\": 1,\n\t\t\"smoothScrollDuration\": 0,\n\t\t\"scrollback\": 1000,\n\t\t\"closeOnSuccess\": true\n\t}\n}\n```\n```output\n\n```\n* Check for any errors processing the block\n* Note that the above command will only process the most recent log file\n* Each time Foyle is restarted it will create a new log file. \n### Did we try to create an example from the cell\n\n* If Foyle tries to learn from a cell it logs a message [here](https://github.com/jlewi/foyle/blob/4288e91ac805b46103d94230b32dd1bc2f957095/app/pkg/learn/learner.go#L155)\n\n* We can query for that log \n## Ensure Block Logs are being created\n* The query below checks that block logs are being created. \n* If no logs are being processed than there is a problem with the block log processing. \n\n\n```bash\njq -c 'select(.message == \"Building block log\")' ${LASTLOG}\n```\n```output\n{\n\t\"type\": \"stateful.runme/terminal\",\n\t\"output\": {\n\t\t\"runme.dev/id\": \"01J6DGNE5HPMA77YBCTXMA3K7Y\",\n\t\t\"content\": \"\",\n\t\t\"initialRows\": 10,\n\t\t\"enableShareButton\": true,\n\t\t\"isAutoSaveEnabled\": false,\n\t\t\"isPlatformAuthEnabled\": false,\n\t\t\"isSessionOutputsEnabled\": true,\n\t\t\"backgroundTask\": true,\n\t\t\"nonInteractive\": false,\n\t\t\"interactive\": true,\n\t\t\"fontSize\": 16,\n\t\t\"fontFamily\": \"Menlo, Monaco, 'Courier New', monospace\",\n\t\t\"rows\": 10,\n\t\t\"cursorStyle\": \"bar\",\n\t\t\"cursorBlink\": true,\n\t\t\"cursorWidth\": 1,\n\t\t\"smoothScrollDuration\": 0,\n\t\t\"scrollback\": 1000,\n\t\t\"closeOnSuccess\": true\n\t}\n}\n```\n```output\n\n```\n```bash\necho $LASTLOG\n```\n```output\n{\n\t\"type\": \"stateful.runme/terminal\",\n\t\"output\": {\n\t\t\"runme.dev/id\": \"01J6DGQX67N5HTB7QJ73YADA0D\",\n\t\t\"content\": \"\",\n\t\t\"initialRows\": 10,\n\t\t\"enableShareButton\": true,\n\t\t\"isAutoSaveEnabled\": false,\n\t\t\"isPlatformAuthEnabled\": false,\n\t\t\"isSessionOutputsEnabled\": true,\n\t\t\"backgroundTask\": true,\n\t\t\"nonInteractive\": false,\n\t\t\"interactive\": true,\n\t\t\"fontSize\": 16,\n\t\t\"fontFamily\": \"Menlo, Monaco, 'Courier New', monospace\",\n\t\t\"rows\": 10,\n\t\t\"cursorStyle\": \"bar\",\n\t\t\"cursorBlink\": true,\n\t\t\"cursorWidth\": 1,\n\t\t\"smoothScrollDuration\": 0,\n\t\t\"scrollback\": 1000,\n\t\t\"closeOnSuccess\": true\n\t}\n}\n```\n```output\n\n```\n```bash\ncat ${LASTLOG} | grep -i \"blockId\" | head -n 5\n```\n\n</input>\n<output>\n```bash\njq -c 'select(.message == \"Found new training example\")' ${LASTLOG} \n```\n\n</output>\n</example>\n<example>\n<input>\n# Troubleshoot Learning\n\nTroubleshoot Learning\n## Check Examples\n\nIf Foyle is learning there should be example files in ${HOME}/.foyle/training\n```bash\nls -la ~/.foyle/training\n```\n```output\n{\n\t\"type\": \"stateful.runme/terminal\",\n\t\"output\": {\n\t\t\"runme.dev/id\": \"01J6DFZ9V3R29TCDEY2AYA8XTV\",\n\t\t\"content\": \"\",\n\t\t\"initialRows\": 10,\n\t\t\"enableShareButton\": true,\n\t\t\"isAutoSaveEnabled\": false,\n\t\t\"isPlatformAuthEnabled\": false,\n\t\t\"isSessionOutputsEnabled\": true,\n\t\t\"backgroundTask\": true,\n\t\t\"nonInteractive\": false,\n\t\t\"interactive\": true,\n\t\t\"fontSize\": 16,\n\t\t\"fontFamily\": \"Menlo, Monaco, 'Courier New', monospace\",\n\t\t\"rows\": 10,\n\t\t\"cursorStyle\": \"bar\",\n\t\t\"cursorBlink\": true,\n\t\t\"cursorWidth\": 1,\n\t\t\"smoothScrollDuration\": 0,\n\t\t\"scrollback\": 1000,\n\t\t\"closeOnSuccess\": true\n\t}\n}\n```\n```output\n\n```\nThe output should include `example.binpb` files as illustrated below. \n\n```\n-rw-r--r--    1 jlewi  staff   9895 Aug 28 07:46 01J6CQ6N02T7J16RFEYCT8KYWP.example.binpb\n```\n\nIf there aren't any then no examples have been learned.\n## Did Block Logs Get Created \n\n* Get the block logs for the cell\n* Change the cell ID to the ULID of the cell (you can view this in the markdown)\n* The cell should be one that was generated by the AI and you think learning should have occurred on\n```bash\nCELLID=01J6DFZ9V3R29TCDEY2AYA8XTV\ncurl http://localhost:8080/api/blocklogs/${CELLID} | jq .\n```\n```output\n{\n\t\"type\": \"stateful.runme/terminal\",\n\t\"output\": {\n\t\t\"runme.dev/id\": \"01J6DG428ER427GJNTKC15G6JM\",\n\t\t\"content\": \"\",\n\t\t\"initialRows\": 10,\n\t\t\"enableShareButton\": true,\n\t\t\"isAutoSaveEnabled\": false,\n\t\t\"isPlatformAuthEnabled\": false,\n\t\t\"isSessionOutputsEnabled\": true,\n\t\t\"backgroundTask\": true,\n\t\t\"nonInteractive\": false,\n\t\t\"interactive\": true,\n\t\t\"fontSize\": 16,\n\t\t\"fontFamily\": \"Menlo, Monaco, 'Courier New', monospace\",\n\t\t\"rows\": 10,\n\t\t\"cursorStyle\": \"bar\",\n\t\t\"cursorBlink\": true,\n\t\t\"cursorWidth\": 1,\n\t\t\"smoothScrollDuration\": 0,\n\t\t\"scrollback\": 1000,\n\t\t\"closeOnSuccess\": true\n\t}\n}\n```\n```output\n\n```\n* If this returns not found then no log was created for this cell\n\n## Check the logs associated with that cell\n* We can search for all logs associated with that cell\n```bash\nexport LASTLOG=~/.foyle/logs/raw/$(ls -t ~/.foyle/logs/raw | head -n 1 )\necho \"Last log file: ${LASTLOG}\"\njq -c \"select(.blockId == \\\"${CELLID}\\\")\" ${LASTLOG}\n```\n```output\n{\n\t\"type\": \"stateful.runme/terminal\",\n\t\"output\": {\n\t\t\"runme.dev/id\": \"01J6DG8266XWR99MWK7WZHQAJM\",\n\t\t\"content\": \"\",\n\t\t\"initialRows\": 10,\n\t\t\"enableShareButton\": true,\n\t\t\"isAutoSaveEnabled\": false,\n\t\t\"isPlatformAuthEnabled\": false,\n\t\t\"isSessionOutputsEnabled\": true,\n\t\t\"backgroundTask\": true,\n\t\t\"nonInteractive\": false,\n\t\t\"interactive\": true,\n\t\t\"fontSize\": 16,\n\t\t\"fontFamily\": \"Menlo, Monaco, 'Courier New', monospace\",\n\t\t\"rows\": 10,\n\t\t\"cursorStyle\": \"bar\",\n\t\t\"cursorBlink\": true,\n\t\t\"cursorWidth\": 1,\n\t\t\"smoothScrollDuration\": 0,\n\t\t\"scrollback\": 1000,\n\t\t\"closeOnSuccess\": true\n\t}\n}\n```\n```output\n\n```\n* Check for any errors processing the block\n* Note that the above command will only process the most recent log file\n* Each time Foyle is restarted it will create a new log file. \n### Did we try to create an example from any cells?\n\n* If Foyle tries to learn from a cell it logs a message [here](https://github.com/jlewi/foyle/blob/4288e91ac805b46103d94230b32dd1bc2f957095/app/pkg/learn/learner.go#L155)\n\n* We can query for that log as follows\n```bash\njq -c 'select(.message == \"Found new training example\")' ${LASTLOG}\n```\n```output\n{\n\t\"type\": \"stateful.runme/terminal\",\n\t\"output\": {\n\t\t\"runme.dev/id\": \"01J6DH6PRXKD55RQ6333AQH3V7\",\n\t\t\"content\": \"\",\n\t\t\"initialRows\": 10,\n\t\t\"enableShareButton\": true,\n\t\t\"isAutoSaveEnabled\": false,\n\t\t\"isPlatformAuthEnabled\": false,\n\t\t\"isSessionOutputsEnabled\": true,\n\t\t\"backgroundTask\": true,\n\t\t\"nonInteractive\": false,\n\t\t\"interactive\": true,\n\t\t\"fontSize\": 16,\n\t\t\"fontFamily\": \"Menlo, Monaco, 'Courier New', monospace\",\n\t\t\"rows\": 10,\n\t\t\"cursorStyle\": \"bar\",\n\t\t\"cursorBlink\": true,\n\t\t\"cursorWidth\": 1,\n\t\t\"smoothScrollDuration\": 0,\n\t\t\"scrollback\": 1000,\n\t\t\"closeOnSuccess\": true\n\t}\n}\n```\n```output\n\n```\n* If that returns nothing then we know Foyle never tried to learn from any cells\n* If it returns something then we know Foyle tried to learn from a cell but it may have failed\n* If there is an error processing an example it gets logged [here](https://github.com/jlewi/foyle/blob/4288e91ac805b46103d94230b32dd1bc2f957095/app/pkg/learn/learner.go#L205)\n* So we can search for \n```bash\njq -c 'select(.level == \"error\")' ${LASTLOG}\n```\n## Ensure Block Logs are being created\n* The query below checks that block logs are being created. \n* If no logs are being processed than there is a problem with the block log processing. \n\n\n```bash\njq -c 'select(.message == \"Building block log\")' ${LASTLOG}\n```\n```output\n{\n\t\"type\": \"stateful.runme/terminal\",\n\t\"output\": {\n\t\t\"runme.dev/id\": \"01J6DGNE5HPMA77YBCTXMA3K7Y\",\n\t\t\"content\": \"\",\n\t\t\"initialRows\": 10,\n\t\t\"enableShareButton\": true,\n\t\t\"isAutoSaveEnabled\": false,\n\t\t\"isPlatformAuthEnabled\": false,\n\t\t\"isSessionOutputsEnabled\": true,\n\t\t\"backgroundTask\": true,\n\t\t\"nonInteractive\": false,\n\t\t\"interactive\": true,\n\t\t\"fontSize\": 16,\n\t\t\"fontFamily\": \"Menlo, Monaco, 'Courier New', monospace\",\n\t\t\"rows\": 10,\n\t\t\"cursorStyle\": \"bar\",\n\t\t\"cursorBlink\": true,\n\t\t\"cursorWidth\": 1,\n\t\t\"smoothScrollDuration\": 0,\n\t\t\"scrollback\": 1000,\n\t\t\"closeOnSuccess\": true\n\t}\n}\n```\n```output\n\n```\n```bash\necho $LASTLOG\n```\n```output\n{\n\t\"type\": \"stateful.runme/terminal\",\n\t\"output\": {\n\t\t\"runme.dev/id\": \"01J6DGQX67N5HTB7QJ73YADA0D\",\n\t\t\"content\": \"\",\n\t\t\"initialRows\": 10,\n\t\t\"enableShareButton\": true,\n\t\t\"isAutoSaveEnabled\": false,\n\t\t\"isPlatformAuthEnabled\": false,\n\t\t\"isSessionOutputsEnabled\": true,\n\t\t\"backgroundTask\": true,\n\t\t\"nonInteractive\": false,\n\t\t\"interactive\": true,\n\t\t\"fontSize\": 16,\n\t\t\"fontFamily\": \"Menlo, Monaco, 'Courier New', monospace\",\n\t\t\"rows\": 10,\n\t\t\"cursorStyle\": \"bar\",\n\t\t\"cursorBlink\": true,\n\t\t\"cursorWidth\": 1,\n\t\t\"smoothScrollDuration\": 0,\n\t\t\"scrollback\": 1000,\n\t\t\"closeOnSuccess\": true\n\t}\n}\n```\n```output\n\n```\n```bash\ncat ${LASTLOG} | grep -i \"blockId\" | head -n 5\n```\n\n</input>\n<output>\n```bash\njq -c 'select(.level == \"Failed to write example\")' ${LASTLOG} \n```\n\n</output>\n</example>\n<example>\n<input>\n# Troubleshoot Learning\n\nTroubleshoot Learning\n\n## Check Examples\n\nIf Foyle is learning there should be example files in ${HOME}/.foyle/training\n```bash\nls -la ~/.foyle/training\n```\n```output\n{\n\t\"type\": \"stateful.runme/terminal\",\n\t\"output\": {\n\t\t\"runme.dev/id\": \"01J6DFZ9V3R29TCDEY2AYA8XTV\",\n\t\t\"content\": \"\",\n\t\t\"initialRows\": 10,\n\t\t\"enableShareButton\": true,\n\t\t\"isAutoSaveEnabled\": false,\n\t\t\"isPlatformAuthEnabled\": false,\n\t\t\"isSessionOutputsEnabled\": true,\n\t\t\"backgroundTask\": true,\n\t\t\"nonInteractive\": false,\n\t\t\"interactive\": true,\n\t\t\"fontSize\": 16,\n\t\t\"fontFamily\": \"Menlo, Monaco, 'Courier New', monospace\",\n\t\t\"rows\": 10,\n\t\t\"cursorStyle\": \"bar\",\n\t\t\"cursorBlink\": true,\n\t\t\"cursorWidth\": 1,\n\t\t\"smoothScrollDuration\": 0,\n\t\t\"scrollback\": 1000,\n\t\t\"closeOnSuccess\": true\n\t}\n}\n```\n```output\n\n```\nThe output should include `example.binpb` files as illustrated below. \n\n```\n-rw-r--r--    1 jlewi  staff   9895 Aug 28 07:46 01J6CQ6N02T7J16RFEYCT8KYWP.example.binpb\n```\n\nIf there aren't any then no examples have been learned.\n## Did Block Logs Get Created \n\n* Get the block logs for the cell\n* Change the cell ID to the ULID of the cell (you can view this in the markdown)\n* The cell should be one that was generated by the AI and you think learning should have occurred on\n```bash\nCELLID=01J6DFZ9V3R29TCDEY2AYA8XTV\ncurl http://localhost:8080/api/blocklogs/${CELLID} | jq .\n```\n```output\n{\n\t\"type\": \"stateful.runme/terminal\",\n\t\"output\": {\n\t\t\"runme.dev/id\": \"01J6DG428ER427GJNTKC15G6JM\",\n\t\t\"content\": \"\",\n\t\t\"initialRows\": 10,\n\t\t\"enableShareButton\": true,\n\t\t\"isAutoSaveEnabled\": false,\n\t\t\"isPlatformAuthEnabled\": false,\n\t\t\"isSessionOutputsEnabled\": true,\n\t\t\"backgroundTask\": true,\n\t\t\"nonInteractive\": false,\n\t\t\"interactive\": true,\n\t\t\"fontSize\": 16,\n\t\t\"fontFamily\": \"Menlo, Monaco, 'Courier New', monospace\",\n\t\t\"rows\": 10,\n\t\t\"cursorStyle\": \"bar\",\n\t\t\"cursorBlink\": true,\n\t\t\"cursorWidth\": 1,\n\t\t\"smoothScrollDuration\": 0,\n\t\t\"scrollback\": 1000,\n\t\t\"closeOnSuccess\": true\n\t}\n}\n```\n```output\n\n```\n* If this returns not found then no log was created for this cell\n\n## Check the logs associated with that cell\n* We can search for all logs associated with that cell\n```bash\nexport LASTLOG=~/.foyle/logs/raw/$(ls -t ~/.foyle/logs/raw | head -n 1 )\necho \"Last log file: ${LASTLOG}\"\njq -c \"select(.blockId == \\\"${CELLID}\\\")\" ${LASTLOG}\n```\n```output\n{\n\t\"type\": \"stateful.runme/terminal\",\n\t\"output\": {\n\t\t\"runme.dev/id\": \"01J6DG8266XWR99MWK7WZHQAJM\",\n\t\t\"content\": \"\",\n\t\t\"initialRows\": 10,\n\t\t\"enableShareButton\": true,\n\t\t\"isAutoSaveEnabled\": false,\n\t\t\"isPlatformAuthEnabled\": false,\n\t\t\"isSessionOutputsEnabled\": true,\n\t\t\"backgroundTask\": true,\n\t\t\"nonInteractive\": false,\n\t\t\"interactive\": true,\n\t\t\"fontSize\": 16,\n\t\t\"fontFamily\": \"Menlo, Monaco, 'Courier New', monospace\",\n\t\t\"rows\": 10,\n\t\t\"cursorStyle\": \"bar\",\n\t\t\"cursorBlink\": true,\n\t\t\"cursorWidth\": 1,\n\t\t\"smoothScrollDuration\": 0,\n\t\t\"scrollback\": 1000,\n\t\t\"closeOnSuccess\": true\n\t}\n}\n```\n```output\n\n```\n* Check for any errors processing the block\n* Note that the above command will only process the most recent log file\n* Each time Foyle is restarted it will create a new log file. \n### Did we try to create an example from any cells?\n\n* If Foyle tries to learn from a cell it logs a message [here](https://github.com/jlewi/foyle/blob/4288e91ac805b46103d94230b32dd1bc2f957095/app/pkg/learn/learner.go#L155)\n\n* We can query for that log as follows\n```bash\njq -c 'select(.message == \"Found new training example\")' ${LASTLOG}\n```\n```output\n{\n\t\"type\": \"stateful.runme/terminal\",\n\t\"output\": {\n\t\t\"runme.dev/id\": \"01J6DH6PRXKD55RQ6333AQH3V7\",\n\t\t\"content\": \"\",\n\t\t\"initialRows\": 10,\n\t\t\"enableShareButton\": true,\n\t\t\"isAutoSaveEnabled\": false,\n\t\t\"isPlatformAuthEnabled\": false,\n\t\t\"isSessionOutputsEnabled\": true,\n\t\t\"backgroundTask\": true,\n\t\t\"nonInteractive\": false,\n\t\t\"interactive\": true,\n\t\t\"fontSize\": 16,\n\t\t\"fontFamily\": \"Menlo, Monaco, 'Courier New', monospace\",\n\t\t\"rows\": 10,\n\t\t\"cursorStyle\": \"bar\",\n\t\t\"cursorBlink\": true,\n\t\t\"cursorWidth\": 1,\n\t\t\"smoothScrollDuration\": 0,\n\t\t\"scrollback\": 1000,\n\t\t\"closeOnSuccess\": true\n\t}\n}\n```\n```output\n\n```\n* If that returns nothing then we know Foyle never tried to learn from any cells\n* If it returns something then we know Foyle tried to learn from a cell but it may have failed\n* If there is an error processing an example it gets logged [here](https://github.com/jlewi/foyle/blob/4288e91ac805b46103d94230b32dd1bc2f957095/app/pkg/learn/learner.go#L205)\n* So we can search for that error message in the logs\n```bash\njq -c 'select(.level == \"Failed to write example\")' ${LASTLOG}\n```\n```output\n{\n\t\"type\": \"stateful.runme/terminal\",\n\t\"output\": {\n\t\t\"runme.dev/id\": \"01J6DHB6FMBF40E5WP0ZACR3B2\",\n\t\t\"content\": \"\",\n\t\t\"initialRows\": 10,\n\t\t\"enableShareButton\": true,\n\t\t\"isAutoSaveEnabled\": false,\n\t\t\"isPlatformAuthEnabled\": false,\n\t\t\"isSessionOutputsEnabled\": true,\n\t\t\"backgroundTask\": true,\n\t\t\"nonInteractive\": false,\n\t\t\"interactive\": true,\n\t\t\"fontSize\": 16,\n\t\t\"fontFamily\": \"Menlo, Monaco, 'Courier New', monospace\",\n\t\t\"rows\": 10,\n\t\t\"cursorStyle\": \"bar\",\n\t\t\"cursorBlink\": true,\n\t\t\"cursorWidth\": 1,\n\t\t\"smoothScrollDuration\": 0,\n\t\t\"scrollback\": 1000,\n\t\t\"closeOnSuccess\": true\n\t}\n}\n```\n```output\n\n```\n```bash\njq -c 'select(.level == \"error\" and .message == \"Failed to write example\")' ${LASTLOG}\n```\n## Ensure Block Logs are being created\n* The query below checks that block logs are being created. \n* If no logs are being processed than there is a problem with the block log processing. \n\n\n```bash\njq -c 'select(.message == \"Building block log\")' ${LASTLOG}\n```\n```output\n{\n\t\"type\": \"stateful.runme/terminal\",\n\t\"output\": {\n\t\t\"runme.dev/id\": \"01J6DGNE5HPMA77YBCTXMA3K7Y\",\n\t\t\"content\": \"\",\n\t\t\"initialRows\": 10,\n\t\t\"enableShareButton\": true,\n\t\t\"isAutoSaveEnabled\": false,\n\t\t\"isPlatformAuthEnabled\": false,\n\t\t\"isSessionOutputsEnabled\": true,\n\t\t\"backgroundTask\": true,\n\t\t\"nonInteractive\": false,\n\t\t\"interactive\": true,\n\t\t\"fontSize\": 16,\n\t\t\"fontFamily\": \"Menlo, Monaco, 'Courier New', monospace\",\n\t\t\"rows\": 10,\n\t\t\"cursorStyle\": \"bar\",\n\t\t\"cursorBlink\": true,\n\t\t\"cursorWidth\": 1,\n\t\t\"smoothScrollDuration\": 0,\n\t\t\"scrollback\": 1000,\n\t\t\"closeOnSuccess\": true\n\t}\n}\n```\n```output\n\n```\n## Are there any errors in the logs\n\n* The query below should show you a\n\n</input>\n<output>\n```bash\njq -c 'select(.severity == \"error\")' ${LASTLOG} \n```\n\n</output>\n</example>\nHere's the actual document containing the problem or task to be solved:\n\n<input>\n# Troubleshoot Learning\n## What You'll Learn\n\n* How to ensure learning is working and monitor learning\n## Check Examples\nIf Foyle is learning there should be example files in ${HOME}/.foyle/training\n```bash\nls -la ~/.foyle/training\n```\nThe output should include `example.binpb` files as illustrated below.\n```bash\n-rw-r--r--    1 jlewi  staff   9895 Aug 28 07:46 01J6CQ6N02T7J16RFEYCT8KYWP.example.binpb\n```\nIf there aren't any then no examples have been learned.\n## Trigger Learning\n\nFoyle's learning is triggered by the following sequence of actions:\n\n1. Foyle generates a suggested cell which is added to the notebook as a Ghost Cell\n1. You accept the suggested cell by putting the focus on the cell\n1. You edit the cell \n1. You execute the cell\n\nWhen you execute the cell, the execution is logged to Foyle. For each executed cell Foyle checks\n\n1. Was that cell generated by Foyle\n1. If the cell was generated by Foyle did the actual command executed differ from the suggested command\n1. If the cell was changed by the user than Foyle attempts to learn from that execution\n\nCrucially, every cell created by Foyle is assigned an ID. This ID can be used to track how\nthe cell was generated and if learning occurred.\n\nTo get the cell ID for a given cell\n\n1. Open the raw markdown file by right clicking on it in VSCode and selecting `Open With` -> `Text Editor`\n1. Find code block containing your cell\n1. Your cell will contain metadata which contains the ID e.g. \n\n````\n```bash {\"id\":\"01J6DG428ER427GJNTKC15G6JM\"}\nCELLID=01J6DFZ9V3R29TCDEY2AYA8XTV\ncurl http://localhost:8080/api/blocklogs/${CELLID} | jq .\n```\n````\n\n\n## Did Block Logs Get Created\n* Get the block logs for the cell\n* Change the cell ID to the ULID of the cell (you can view this in the markdown)\n* The cell should be one that was generated by the AI and you think learning should have occurred on\n\n```bash\nCELLID=01J6DFZ9V3R29TCDEY2AYA8XTV\ncurl http://localhost:8080/api/blocklogs/${CELLID} | jq .\n```\n* If this returns not found then no log was created for this cell\n## Check the logs associated with that cell\n* We can search for all logs associated with that cell\n```bash\nexport LASTLOG=~/.foyle/logs/raw/$(ls -t ~/.foyle/logs/raw | head -n 1 )\necho \"Last log file: ${LASTLOG}\"\njq -c \"select(.blockId == \\\"${CELLID}\\\")\" ${LASTLOG}\n```\n* Check for any errors processing the block\n* Note that the above command will only process the most recent log file\n* Each time Foyle is restarted it will create a new log file.\n### Did we try to create an example from any cells?\n* If Foyle tries to learn from a cell it logs a message [here](https://github.com/jlewi/foyle/blob/4288e91ac805b46103d94230b32dd1bc2f957095/app/pkg/learn/learner.go#L155)\n* We can query for that log as follows\n```bash\njq -c 'select(.message == \"Found new training example\")' ${LASTLOG}\n```\n* If that returns nothing then we know Foyle never tried to learn from any cells\n* If it returns something then we know Foyle tried to learn from a cell but it may have failed\n* If there is an error processing an example it gets logged [here](https://github.com/jlewi/foyle/blob/4288e91ac805b46103d94230b32dd1bc2f957095/app/pkg/learn/learner.go#L205)\n* So we can search for that error message in the logs\n```bash\njq -c 'select(.level == \"Failed to write example\")' ${LASTLOG}\n```\n```bash\njq -c 'select(.level == \"error\" and .message == \"Failed to write example\")' ${LASTLOG}\n```\n## Ensure Block Logs are being created\n* The query below checks that block logs are being created.\n* If no logs are being processed than there is a problem with the block log processing.\n```bash\njq -c 'select(.message == \"Building block log\")' ${LASTLOG}\n```\n## Are there any errors in the logs\n* The query below should show you any errors in the logs.\n```bash\njq -c 'select(.severity == \"error\")' ${LASTLOG}\n```\n\n</input>\n<output>\n",
          "type": "text"
        }
      ],
      "role": "user"
    }
  ],
  "model": "claude-3-5-sonnet-20240620",
  "system": "You are a helpful AI assistant for software developers. You are helping software engineers write \nmarkdown documents to deploy and operate software. Your job is to help users with tasks related to building, deploying,\nand operating software. You should interpret any questions or commands in that context. You job is to suggest\ncommands the user can execute to accomplish their goals.",
  "temperature": 0.9
}
